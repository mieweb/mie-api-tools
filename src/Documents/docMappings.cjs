const mapOne = new Map();
mapOne.set("filePath", "file");
mapOne.set("mrNumber", "mrnumber");
mapOne.set("docID", "doc_id");
mapOne.set("revisionNumber", "revision_number");
mapOne.set("userID", "user_id");
mapOne.set("originID", "origin_id");
mapOne.set("patID", "pat_id");
mapOne.set("docType", "doc_type");
mapOne.set("storageType", "storage_type");
mapOne.set("storageID", "storage_id");
mapOne.set("serviceLocation", "service_location");
mapOne.set("originDate", "origin_date");
mapOne.set("enterDate", "enter_date");
mapOne.set("revisionDate", "revision_date");
mapOne.set("serviceDate", "service_date");
mapOne.set("approxServiceDate", "approx_service_date");
mapOne.set("interface", "interface");
mapOne.set("inpatient", "inpatient");
mapOne.set("allowForTeaching", "allow_for_teaching");
mapOne.set("subject", "subject");

const mapTwo = new Map();
mapTwo.set("filepath", "file");
mapTwo.set("mrnumber", "mrnumber");
mapTwo.set("docid", "doc_id");
mapTwo.set("revisionnumber", "revision_number");
mapTwo.set("userid", "user_id");
mapTwo.set("originid", "origin_id");
mapTwo.set("patid", "pat_id");
mapTwo.set("doctype", "doc_type");
mapTwo.set("storagetype", "storage_type");
mapTwo.set("storageid", "storage_id");
mapTwo.set("servicelocation", "service_location");
mapTwo.set("origindate", "origin_date");
mapTwo.set("enterdate", "enter_date");
mapTwo.set("revisiondate", "revision_date");
mapTwo.set("servicedate", "service_date");
mapTwo.set("approxservicedate", "approx_service_date");
mapTwo.set("interface", "interface");
mapTwo.set("inpatient", "inpatient");
mapTwo.set("allowforteaching", "allow_for_teaching");
mapTwo.set("subject", "subject");

module.exports = { mapOne, mapTwo }